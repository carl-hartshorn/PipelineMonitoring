@inject EventService EventService
@using PipelineMonitoring.Model.Common
<!-- https://dev.to/j_sakamoto/workaround-how-to-two-way-data-binding-of-radio-button-input-with-blazor-spa-v050-31fd -->
<div class="mb-4">
    <div id="filter-select" class="btn-group btn-group-toggle float-md-right" data-toggle="buttons">
        <label class="btn btn-secondary @(FilterCriteria.ShowAll ? "active" : "")">
            <input type="radio" @onchange="() => UpdateShowAllTo(true)" autocomplete="off" checked="@(FilterCriteria.ShowAll)" /> Show All
        </label>
        <label class="btn btn-secondary @(!FilterCriteria.ShowAll ? "active" : "")">
            <input type="radio" @onchange="() => UpdateShowAllTo(false)" autocomplete="off" checked="@(!FilterCriteria.ShowAll)" /> @FilterLabel
        </label>
    </div>
</div>

@code {
    [Parameter]
    public FilterCriteria FilterCriteria { get; set; }

    [Parameter]
    public string FilterLabel { get; set; }

    private void UpdateShowAllTo(bool newValue)
    {
        FilterCriteria.ShowAll = newValue;
        EventService.SendFilterChanged();
    }
}
